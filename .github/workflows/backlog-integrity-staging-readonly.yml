name: Backlog Integrity - Staging Read-Only

on:
  schedule:
    - cron: '0 4 * * *'  # Daily at 4 AM UTC
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Skip actual DB queries (test mode)'
        type: boolean
        default: false

jobs:
  staging-integrity-check:
    runs-on: ubuntu-latest
    if: vars.ENABLE_STAGING_CHECKS == 'true'  # Repository variable guard
    
    permissions:
      contents: read
      pull-requests: write
      actions: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      
      - name: Run staging integrity queries
        if: ${{ !inputs.dry_run }}
        env:
          DATABASE_URL: ${{ secrets.SUPABASE_POOLER_URL }}
        run: |
          set -e
          
          echo "🔍 Running backlog integrity checks against staging..."
          mkdir -p reports
          
          # Execute the staging SQL file
          psql "$DATABASE_URL" -f ops/checks/backlog_integrity_staging.sql
          
          # Move generated CSVs to reports/
          mv *.csv reports/ 2>/dev/null || true
          
          echo "✅ Staging checks complete"
      
      - name: Generate dry-run placeholder
        if: ${{ inputs.dry_run }}
        run: |
          mkdir -p reports
          echo "timestamp,check,status" > reports/dry_run_placeholder.csv
          echo "$(date -u +%Y-%m-%dT%H:%M:%SZ),dry_run,skipped" >> reports/dry_run_placeholder.csv
      
      - name: Generate summary
        if: always()
        run: |
          echo "## Backlog Integrity Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Gap Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f reports/sd_metadata_gaps.csv ]; then
            count=$(tail -n +2 reports/sd_metadata_gaps.csv | wc -l)
            echo "- **SD Metadata Gaps**: $count issues" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f reports/prd_contract_gaps.csv ]; then
            count=$(tail -n +2 reports/prd_contract_gaps.csv | wc -l)
            echo "- **PRD Contract Gaps**: $count issues" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f reports/backlog_shape_issues.csv ]; then
            count=$(tail -n +2 reports/backlog_shape_issues.csv | wc -l)
            echo "- **Backlog Shape Issues**: $count items" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f reports/traceability_gaps.csv ]; then
            count=$(tail -n +2 reports/traceability_gaps.csv | wc -l)
            echo "- **Traceability Gaps**: $count orphans" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Traceability**: ⚠️ View not available (expected)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 Reports available as workflow artifacts" >> $GITHUB_STEP_SUMMARY

      - name: Backlog integrity – asserts (critical only)
        if: ${{ vars.ENABLE_BACKLOG_ASSERTS == '1' }}
        env:
          DATABASE_URL: ${{ secrets.SUPABASE_POOLER_URL }}
        run: |
          # Defaults to 0 if not set
          ORPHAN_MAX="${{ vars.ORPHAN_MAX || 0 }}"
          PRD_MAX="${{ vars.PRD_MAX || 0 }}"
          psql "$DATABASE_URL" \
               -v ON_ERROR_STOP=1 \
               -v ORPHAN_MAX="${ORPHAN_MAX}" \
               -v PRD_MAX="${PRD_MAX}" \
               -f ops/checks/backlog_assert_critical.sql

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backlog-integrity-reports-${{ github.run_id }}
          path: reports/
          retention-days: 30
      
      - name: Handle failure gracefully
        if: failure()
        run: |
          echo "::warning::Backlog integrity check encountered issues. This is non-blocking."
          echo "Check the artifacts for any partial reports generated."
          exit 0  # Don't fail the workflow