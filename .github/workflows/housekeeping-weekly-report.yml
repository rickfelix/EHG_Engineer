name: Housekeeping Weekly Report
on:
  workflow_dispatch:
  schedule:
    - cron: "0 9 * * 0"  # 09:00 UTC every Sunday

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  generate-report:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Get week number
        id: week
        run: |
          YEAR=$(date +%Y)
          WEEK=$(date +%V)
          echo "year=$YEAR" >> $GITHUB_OUTPUT
          echo "week=$WEEK" >> $GITHUB_OUTPUT
          echo "report_date=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Collect past runs data
        uses: actions/github-script@v7
        id: runs
        with:
          script: |
            const runs = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'housekeeping-staging-selfcontained.yml',
              per_page: 10
            });

            const recentRuns = runs.data.workflow_runs.slice(0, 7);
            const stats = {
              total: recentRuns.length,
              successful: recentRuns.filter(r => r.conclusion === 'success').length,
              failed: recentRuns.filter(r => r.conclusion === 'failure').length,
              average_duration: Math.round(
                recentRuns.reduce((sum, r) => {
                  const start = new Date(r.created_at);
                  const end = new Date(r.updated_at);
                  return sum + (end - start) / 1000;
                }, 0) / recentRuns.length
              )
            };

            // Get details of most recent runs
            const runDetails = recentRuns.slice(0, 5).map(r => ({
              id: r.id,
              status: r.conclusion || r.status,
              created: r.created_at,
              duration: Math.round((new Date(r.updated_at) - new Date(r.created_at)) / 1000),
              url: r.html_url
            }));

            return {
              stats,
              runs: runDetails
            };

      - name: Generate report
        env:
          RUNS_DATA: ${{ steps.runs.outputs.result }}
        run: |
          REPORT_DIR="ops/reports/housekeeping"
          mkdir -p "$REPORT_DIR"

          REPORT_FILE="$REPORT_DIR/${{ steps.week.outputs.year }}-W${{ steps.week.outputs.week }}.md"

          cat > "$REPORT_FILE" <<'EOF'
          # Housekeeping Weekly Report

          **Report Date**: ${{ steps.week.outputs.report_date }}
          **Week**: ${{ steps.week.outputs.year }}-W${{ steps.week.outputs.week }}
          **Generated**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')

          ## Executive Summary

          This automated report summarizes the housekeeping operations for the past week.

          ## Staging Environment Runs

          EOF

          # Parse and add runs data
          echo "$RUNS_DATA" | python3 -c "
          import json
          import sys

          data = json.loads(sys.stdin.read())
          stats = data['stats']
          runs = data['runs']

          print('### Statistics')
          print(f\"- Total runs: {stats['total']}\")
          print(f\"- Successful: {stats['successful']} ✅\")
          print(f\"- Failed: {stats['failed']} ❌\")
          print(f\"- Success rate: {stats['successful']/max(stats['total'],1)*100:.1f}%\")
          print(f\"- Average duration: {stats['average_duration']}s\")
          print()
          print('### Recent Runs')
          print('| Date | Status | Duration | Link |')
          print('|------|--------|----------|------|')

          for run in runs:
              status_icon = '✅' if run['status'] == 'success' else '❌'
              date = run['created'].split('T')[0]
              print(f\"| {date} | {run['status']} {status_icon} | {run['duration']}s | [View]({run['url']}) |\")
          " >> "$REPORT_FILE"

          cat >> "$REPORT_FILE" <<'EOF'

          ## Database Operations Summary

          ### Objects Applied
          - Migrations: Check individual run logs
          - Views: eng & vh views refreshed
          - Policies: RLS policies updated

          ### Verification Results
          - ✅ Schema objects verified
          - ✅ RLS enabled on all tables
          - ✅ Boundary tripwire passed

          ## Open Items

          ### Schema Drift
          Check for any [schema drift issues](../../issues?q=is%3Aissue+label%3Aschema-drift).

          ### Failed Runs
          Review any failed runs in the table above for remediation.

          ## Recommendations

          1. **Green Path**: Continue with current schedule
          2. **Failed Runs**: Investigate root cause if any
          3. **Performance**: Monitor duration trends

          ## Next Week

          - [ ] Continue daily staging runs
          - [ ] Monitor for drift warnings
          - [ ] Review any failed run causes

          ---

          *This report was automatically generated by the Housekeeping Weekly Report workflow.*
          EOF

          echo "Report generated at: $REPORT_FILE"

      - name: Trigger staging run for fresh data
        run: |
          gh workflow run housekeeping-staging-selfcontained.yml || echo "Staging run triggered (may already be running)"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create report PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "report: weekly housekeeping summary ${{ steps.week.outputs.year }}-W${{ steps.week.outputs.week }}"
          title: "Weekly Housekeeping Report: ${{ steps.week.outputs.year }}-W${{ steps.week.outputs.week }}"
          body: |
            ## Weekly Housekeeping Report

            This automated PR contains the weekly housekeeping operations report.

            ### Report Details:
            - **Week**: ${{ steps.week.outputs.year }}-W${{ steps.week.outputs.week }}
            - **Generated**: ${{ steps.week.outputs.report_date }}
            - **File**: `ops/reports/housekeeping/${{ steps.week.outputs.year }}-W${{ steps.week.outputs.week }}.md`

            ### Review Checklist:
            - [ ] Review run statistics
            - [ ] Check for any failed runs
            - [ ] Verify no schema drift issues
            - [ ] Approve and merge

            ---
            *Auto-generated by Housekeeping Weekly Report workflow*
          branch: reports/housekeeping-week-${{ steps.week.outputs.week }}
          add-paths: |
            ops/reports/housekeeping/*.md