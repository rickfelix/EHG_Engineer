{"version":3,"file":"PRDManager-C1pXLWQs.js","sources":["../../src/components/PRDManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { \n  FileText, \n  ChevronRight, \n  CheckSquare,\n  Square,\n  Target,\n  Plus,\n  Wand2\n} from 'lucide-react';\nimport ReactMarkdown from 'react-markdown';\n\nfunction PRDManager({ prds, isCompact, detailMode }) {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [viewMode, setViewMode] = useState('list'); \n  const [selectedPRD, setSelectedPRD] = useState(null);\n  \n  // Handle URL-based detail view\n  useEffect(() => {\n    if (detailMode && id) {\n      const prd = prds.find(p => p.id === id);\n      if (prd) {\n        setSelectedPRD(prd);\n        setViewMode('detail');\n        document.title = `${prd.title || prd.id} - LEO Protocol Dashboard`;\n      } else {\n        console.warn(`PRD with id '${id}' not found, redirecting to list`);\n        navigate('/prds', { replace: true });\n      }\n    } else if (!detailMode) {\n      setViewMode('list');\n      setSelectedPRD(null);\n      document.title = 'PRDs - LEO Protocol Dashboard';\n    }\n  }, [id, detailMode, prds, navigate]);\n\n  const viewDetail = (prd) => {\n    if (!prd || !prd.id) {\n      console.error('Invalid PRD for navigation:', prd);\n      return;\n    }\n    \n    try {\n      navigate(`/prds/${prd.id}`);\n    } catch (error) {\n      console.error('Navigation error:', error);\n    }\n  };\n\n  if (viewMode === 'detail' && selectedPRD) {\n    return (\n      <div className=\"p-6\">\n        <button\n          onClick={() => navigate('/prds')}\n          className=\"mb-4 text-primary-600 hover:text-primary-700 flex items-center\"\n        >\n          <ChevronRight className=\"w-4 h-4 mr-1 rotate-180\" />\n          Back to PRDs\n        </button>\n        \n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\n          <div className=\"mb-4\">\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n              {selectedPRD.title}\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\n              {selectedPRD.directiveTitle && `Strategic Directive: ${selectedPRD.directiveTitle}`}\n            </p>\n          </div>\n          \n          {/* PRD Metadata */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded\">\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Status</p>\n              <p className=\"font-semibold text-gray-900 dark:text-white\">{selectedPRD.status}</p>\n            </div>\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded\">\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Priority</p>\n              <p className=\"font-semibold text-gray-900 dark:text-white\">{selectedPRD.priority}</p>\n            </div>\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded\">\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Phase</p>\n              <p className=\"font-semibold text-gray-900 dark:text-white\">{selectedPRD.phase}</p>\n            </div>\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded\">\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Progress</p>\n              <p className=\"font-semibold text-gray-900 dark:text-white\">{selectedPRD.progress}%</p>\n            </div>\n          </div>\n\n          {/* Full Content */}\n          <div className=\"prose prose-lg dark:prose-invert max-w-none mb-6\">\n            <ReactMarkdown>{selectedPRD.content || 'No content available'}</ReactMarkdown>\n          </div>\n\n          {/* Interactive Checklist */}\n          {selectedPRD.checklist && selectedPRD.checklist.length > 0 && (\n            <div className=\"border-t pt-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Implementation Checklist</h3>\n              <div className=\"space-y-2\">\n                {selectedPRD.checklist.map((item, index) => (\n                  <div\n                    key={index}\n                    className=\"flex items-start p-3 rounded bg-gray-50 dark:bg-gray-700\"\n                  >\n                    {item.checked ? (\n                      <CheckSquare className=\"w-5 h-5 text-green-600 mt-0.5 mr-3 flex-shrink-0\" />\n                    ) : (\n                      <Square className=\"w-5 h-5 text-gray-400 mt-0.5 mr-3 flex-shrink-0\" />\n                    )}\n                    <span className={`flex-1 ${item.checked ? 'line-through text-gray-500' : ''}`}>\n                      {item.text}\n                    </span>\n                    {item.phase && (\n                      <span className=\"text-xs text-gray-500 bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded ml-2\">\n                        {item.phase}\n                      </span>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={isCompact ? 'p-3' : 'p-6'}>\n      <div className={isCompact ? 'mb-3' : 'mb-6'}>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className={`${isCompact ? 'text-2xl' : 'text-3xl'} font-bold text-gray-900 dark:text-white`}>\n              PRDs\n            </h1>\n            <p className={`text-gray-600 dark:text-gray-400 ${isCompact ? 'text-sm mt-1' : 'mt-2'}`}>\n              Product Requirements Documents - Technical implementation details\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {prds.length === 0 ? (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-12 text-center\">\n          <FileText className=\"w-16 h-16 mx-auto text-gray-400 mb-4\" />\n          <p className=\"text-gray-500 dark:text-gray-400\">\n            No PRDs found\n          </p>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          {prds.map((prd) => (\n            <div\n              key={prd.id}\n              className=\"bg-white dark:bg-gray-800 rounded-lg shadow hover:shadow-lg transition-shadow\"\n            >\n              <div className=\"p-6\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-start space-x-3\">\n                      <FileText className=\"w-6 h-6 text-blue-600 mt-1\" />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                          {prd.title}\n                        </h3>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                          {prd.directiveTitle && `SD: ${prd.directiveTitle}`}\n                        </p>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n                          {prd.description}\n                        </p>\n                        \n                        <div className=\"flex items-center space-x-4 mt-3\">\n                          <span className={`px-2 py-1 rounded text-xs font-medium ${\n                            prd.status === 'approved' ? 'bg-green-100 text-green-800' :\n                            prd.status === 'in_progress' ? 'bg-blue-100 text-blue-800' :\n                            'bg-gray-100 text-gray-800'\n                          }`}>\n                            {prd.status}\n                          </span>\n                          <span className={`px-2 py-1 rounded text-xs font-medium ${\n                            prd.priority === 'high' ? 'bg-red-100 text-red-800' :\n                            prd.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                            'bg-green-100 text-green-800'\n                          }`}>\n                            {prd.priority}\n                          </span>\n                          <span className=\"text-xs text-gray-500\">\n                            Phase: {prd.phase}\n                          </span>\n                          <span className=\"text-xs text-gray-500\">\n                            Progress: {prd.progress}%\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"ml-4 flex flex-col items-end space-y-2\">\n                    <button\n                      onClick={() => viewDetail(prd)}\n                      className=\"px-4 py-2 bg-primary-600 text-white rounded hover:bg-primary-700 transition-colors\"\n                    >\n                      View Full\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PRDManager;"],"names":["PRDManager","prds","isCompact","detailMode","id","useParams","navigate","useNavigate","viewMode","setViewMode","useState","selectedPRD","setSelectedPRD","useEffect","prd","p","viewDetail","error","jsxs","jsx","ChevronRight","ReactMarkdown","item","index","CheckSquare","Square","FileText"],"mappings":"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"}