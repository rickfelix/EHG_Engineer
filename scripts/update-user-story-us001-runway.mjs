#!/usr/bin/env node

/**
 * Update User Story US-001 with Runway API
 */

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
  process.env.SUPABASE_URL || 'https://dedlbzhpgkmetvhbkyzq.supabase.co',
  process.env.SUPABASE_ANON_KEY
);

async function updateUserStory() {
  console.log('🔄 Updating User Story US-001');
  console.log('='.repeat(80));

  const { data, error } = await supabase
    .from('user_stories')
    .update({
      title: 'Runway Gen-3 API Integration for Video Variant Generation',
      user_want: 'to submit a single video concept prompt and receive 12-20 variants generated by Runway Gen-3',
      acceptance_criteria: [
        'Runway Gen-3 API authenticated and connected via @runwayml/sdk',
        'Single prompt input generates 12-20 video variants using gen4_turbo model',
        'Generation completes in <10 minutes (success metric)',
        'Variants stored with unique IDs for tracking',
        'Error handling for API failures with retry logic',
        'IVideoGenerationService interface abstracts provider (allows future Sora 2 migration)'
      ],
      technical_notes: 'Integrate Runway Gen-3 API using @runwayml/sdk, implement IVideoGenerationService abstraction layer, configure gen4_turbo model ($0.05/sec), implement timeout and retry mechanisms. Architecture supports future migration to Sora 2 when GA/stable.'
    })
    .eq('story_key', 'SD-VIDEO-VARIANT-001:US-001')
    .select();

  if (error) {
    console.error('❌ Error:', error.message);
    process.exit(1);
  }

  console.log('✅ User Story US-001 updated!');
  console.log('');
  console.log('Updated Details:');
  console.log('  Title: Runway Gen-3 API Integration for Video Variant Generation');
  console.log('  Acceptance Criteria: 6 items (including abstraction layer requirement)');
  console.log('  Technical Notes: Updated with @runwayml/sdk and IVideoGenerationService');
  console.log('');
  console.log('📝 Ready to begin implementation!');
  console.log('='.repeat(80));
}

updateUserStory();
