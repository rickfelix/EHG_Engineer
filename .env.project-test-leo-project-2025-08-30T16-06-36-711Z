# ===========================================================================
# LEO Protocol - Project Registration Configuration
# ===========================================================================
# HOW TO USE THIS FILE:
# 1. Replace the example values with your actual information
# 2. Save this file
# 3. Run: node scripts/leo-register-from-env.js
# 4. Your project will be registered automatically!
# ===========================================================================

# ========================================
# PROJECT INFORMATION (REQUIRED)
# ========================================

# Your project name - This is what you'll use to switch between projects
# EXAMPLE: PROJECT_NAME=my-todo-app
# YOUR VALUE: Replace "your-project-name-here" with your actual project name
PROJECT_NAME=test-leo-project

# Project description - A brief description of your project
# EXAMPLE: PROJECT_DESCRIPTION=A todo list application with React
# YOUR VALUE: Replace with your project description
PROJECT_DESCRIPTION=Test project for LEO Protocol demonstration

# Environment - Choose one: development, staging, or production
# Most users should leave this as "development"
PROJECT_ENVIRONMENT=development

# ========================================
# GITHUB CONFIGURATION (REQUIRED)
# ========================================

# Your GitHub username (the part after github.com/)
# EXAMPLE: If your GitHub profile is github.com/johndoe, then GITHUB_OWNER=johndoe
# YOUR VALUE: Replace "your-github-username" with your actual GitHub username
GITHUB_OWNER=rickf-test

# Your repository name (just the repo name, not the full URL)
# EXAMPLE: If your repo is github.com/johndoe/my-app, then GITHUB_REPO=my-app
# YOUR VALUE: Replace "your-repo-name" with your actual repository name
GITHUB_REPO=leo-test-repo

# Default branch (usually "main" or "master")
# Most projects use "main" now, so you can probably leave this as is
GITHUB_BRANCH=main

# GitHub Personal Access Token (OPTIONAL - leave blank if you don't have one)
# To create one: Go to GitHub → Settings → Developer Settings → Personal Access Tokens
# You can leave this empty for now
GITHUB_PAT=

# ========================================
# SUPABASE CONFIGURATION (OPTIONAL)
# ========================================
# If you don't use Supabase, just leave these as placeholder values
# They won't affect your project registration

# Supabase project ID 
# If you don't have Supabase, leave as is
SUPABASE_PROJECT_ID=placeholder-project-id

# Supabase URL
# If you don't have Supabase, leave as is
SUPABASE_URL=https://placeholder.supabase.co

# Supabase Anon Key
# If you don't have Supabase, leave as is
SUPABASE_ANON_KEY=placeholder-anon-key

# Supabase Service Key (OPTIONAL)
# Leave blank unless you specifically need this
SUPABASE_SERVICE_KEY=

# ===========================================================================
# HOW TO REGISTER MULTIPLE PROJECTS
# ===========================================================================
# 
# The LEO Protocol supports managing multiple projects. Here's how:
#
# FOR EACH NEW PROJECT:
# 1. Copy this template: cp .env.project-template .env.project-registration
# 2. Edit .env.project-registration with your project's information
# 3. Run: node scripts/leo-register-from-env.js
# 4. The .env.project-registration file will be automatically cleared after success
#
# TO SEE ALL YOUR PROJECTS:
# Run: node scripts/leo.js projects
#
# TO SWITCH BETWEEN PROJECTS:
# Run: node scripts/leo.js switch [project-name]
# Example: node scripts/leo.js switch my-todo-app
#
# ===========================================================================
# 1. Fill in the values above (at minimum: PROJECT_NAME, GITHUB_OWNER, GITHUB_REPO)
# 2. Save this file
# 3. Run: node scripts/leo-register-from-env.js
# 4. Your project will be registered automatically!
#
# For placeholder values:
# - You can use "placeholder" or "test" values for fields you don't have
# - The minimum required fields are: PROJECT_NAME, GITHUB_OWNER, GITHUB_REPO
# - Everything else can be updated later